//
//  ProductDetailInteractorTests.swift
//  ProductStoreDemo
//
//  Created by Pit on 16/6/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import ProductStoreDemo
import XCTest

class ProductDetailInteractorTests: XCTestCase{
    
    // MARK: Subject under test
    
    var sut: ProductDetailInteractor!
    
    // MARK: Test lifecycle
    
    override func setUp(){
        super.setUp()
        setupProductDetailInteractor()
    }
    
    override func tearDown(){
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupProductDetailInteractor(){
        sut = ProductDetailInteractor()
    }
    
    // MARK: Test doubles
    
    class ProductDetailPresentationLogicSpy: ProductDetailPresentationLogic{
        
        var presentProductDetailCalled: Bool = false
        func presentProductDetail(response: ProductDetail.Detail.Response) {
            presentProductDetailCalled = true
        }
    }
    
    // MARK: Tests
    
    func testShouldGetProductDetail(){
        
        // Given
        let spy = ProductDetailPresentationLogicSpy()
        sut.presenter = spy
        let request = ProductDetail.Detail.Request()
        
        // When
        sut.getProductDetail(request: request)
        
        // Then
        XCTAssertTrue(spy.presentProductDetailCalled, "getProductDetail(request:) should ask the presenter to format the result")
    }
}
