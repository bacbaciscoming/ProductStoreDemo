//
//  ProductDetailPresenterTests.swift
//  ProductStoreDemo
//
//  Created by Pit on 16/6/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import ProductStoreDemo
import XCTest

class ProductDetailPresenterTests: XCTestCase{
    
    // MARK: Subject under test
    
    var sut: ProductDetailPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp(){
        super.setUp()
        setupProductDetailPresenter()
    }
    
    override func tearDown(){
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupProductDetailPresenter(){
        sut = ProductDetailPresenter()
    }
    
    // MARK: Test doubles
    
    class ProductDetailDisplayLogicSpy: ProductDetailDisplayLogic{
        
        var displayProductDetailCalled: Bool = false
        func displayProductDetail(viewModel: ProductDetail.Detail.ViewModel) {
            displayProductDetailCalled = true
        }
    }
    
    // MARK: Tests
    
    func testPresentProductDetail(){
        
        // Given
        let spy = ProductDetailDisplayLogicSpy()
        sut.viewController = spy
        let response = ProductDetail.Detail.Response(product: ProductTest.product1)
        
        // When
        sut.presentProductDetail(response: response)
        
        // Then
        XCTAssertTrue(spy.displayProductDetailCalled, "presentSomething(response:) should ask the view controller to display the result")
    }
}
