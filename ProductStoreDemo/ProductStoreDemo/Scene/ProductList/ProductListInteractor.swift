//
//  ProductListInteractor.swift
//  ProductStoreDemo
//
//  Created by Pit on 12/6/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductListBusinessLogic{
    func getProductList(request: ProductList.List.Request)
    func selectCurrentProduct(index: Int)
}

protocol ProductListDataStore{
    var currentProduct: ProductModel { get set }
}

class ProductListInteractor: ProductListBusinessLogic, ProductListDataStore{
    
    var presenter: ProductListPresentationLogic?
    var worker: ProductListWorker = ProductListWorker()
    
    var currentProduct: ProductModel = ProductModel()
    
    var productList: [ProductModel] = []
    
    func getProductList(request: ProductList.List.Request){
        
        self.worker.getProductList(completion: { (productList: [ProductModel]) in
            
            self.productList = productList
            let response = ProductList.List.Response(productList: productList)
            self.presenter?.presentProductList(response: response)
        }, failure: { (errorDescription: String) in
            let error = ProductList.List.Error(errorDescription: errorDescription)
            self.presenter?.handleProductListFailure(error: error)
        })
    }
    
    func selectCurrentProduct(index: Int){
        self.currentProduct = self.productList[index]
        self.presenter?.presentProductDetail()
    }
}
