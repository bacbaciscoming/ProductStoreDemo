//
//  ProductListPresenter.swift
//  ProductStoreDemo
//
//  Created by Pit on 12/6/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductListPresentationLogic{
    func presentProductList(response: ProductList.List.Response)
    func presentProductDetail()
    func handleProductListFailure(error: ProductList.List.Error)
}

class ProductListPresenter: ProductListPresentationLogic{
    
    weak var viewController: ProductListDisplayLogic?
    
    func presentProductList(response: ProductList.List.Response){
        
        var productList: [ProductList.List.ViewModel.Product] = []
        for productModel in response.productList{
            productList.append(ProductList.List.ViewModel.Product(title: productModel.title,
                                                                  image: productModel.image,
                                                                  isNewProduct: productModel.isNewProduct,
                                                                  price: productModel.price))
        }
        
        let viewModel = ProductList.List.ViewModel(productList: productList)
        self.viewController?.displayProductList(viewModel: viewModel)
    }
    
    func presentProductDetail(){
        self.viewController?.displayProductDetail()
    }
    
    func handleProductListFailure(error: ProductList.List.Error){
        self.viewController?.showAlertFailure(error: error)
    }
}
